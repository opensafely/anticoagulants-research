-------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /workspace/output/oac_match_log/04_an_descriptive_table_covidtest.
> log
  log type:  text
 opened on:  31 Dec 2020, 11:30:59

. 
. * Open Stata dataset
. use $tempdir/analysis_dataset_`outcome', clear

. 
. /*===========================================================================
> ===*/
. 
. /* PROGRAMS TO AUTOMATE TABULATIONS==========================================
> =*/ 
. 
. *****************************************************************************
> ***
. * All below code from K Baskharan 
. * Generic code to output one row of table
. 
. cap prog drop generaterow

. program define generaterow
  1. syntax, variable(varname) condition(string) 
  2.         
.         qui safecount
  3.         local overalldenom=r(N)
  4.         
.         qui sum `variable' if `variable' `condition'
  5.         file write tablecontent (r(max)) _tab
  6.         
.         qui safecount if `variable' `condition'
  7.         local rowdenom = r(N)
  8.         local colpct = 100*(r(N)/`overalldenom')
  9.         file write tablecontent %9.0gc (`rowdenom')  (" (") %3.1f (`colpct
> ') (")") _tab
 10. 
.         qui safecount if exposure == 0 
 11.         local rowdenom = r(N)
 12.         qui safecount if exposure == 0 & `variable' `condition'
 13.         local pct = 100*(r(N)/`rowdenom') 
 14.         file write tablecontent %9.0gc (r(N)) (" (") %3.1f (`pct') (")") _
> tab
 15. 
.         qui safecount if exposure == 1 
 16.         local rowdenom = r(N)
 17.         qui safecount if exposure == 1 & `variable' `condition'
 18.         local pct = 100*(r(N)/`rowdenom')
 19.         file write tablecontent %9.0gc (r(N)) (" (") %3.1f  (`pct') (")") 
> _n
 20.         
. end

. 
. 
. 
. /* Explanatory Notes 
> 
> defines a program (SAS macro/R function equivalent), generate row
> the syntax row specifies two inputs for the program: 
> 
>         a VARNAME which is your variable 
>         a CONDITION which is a string of some condition you impose 
>         
> the program counts if variable and condition and returns the counts
> column percentages are then automatically generated
> this is then written to the text file 'tablecontent' 
> the number followed by space, brackets, formatted pct, end bracket and then t
> ab
> 
> the format %3.1f specifies length of 3, followed by 1 dp. 
> 
> */ 
. 
. *****************************************************************************
> ***
. * Generic code to output one section (varible) within table (calls above)
. 
. cap prog drop tabulatevariable

. prog define tabulatevariable
  1. syntax, variable(varname) min(real) max(real) [missing]
  2. 
.         local lab: variable label `variable'
  3.         file write tablecontent ("`lab'") _n 
  4. 
.         forvalues varlevel = `min'/`max'{ 
  5.                 generaterow, variable(`variable') condition("==`varlevel'"
> )
  6.         }
  7.         
.         if "`missing'"!="" generaterow, variable(`variable') condition(">=.")
  8. 
. end

. 
. *****************************************************************************
> ***
. 
. /* Explanatory Notes 
> 
> defines program tabulate variable 
> syntax is : 
> 
>         - a VARNAME which you stick in variable 
>         - a numeric minimum 
>         - a numeric maximum 
>         - optional missing option, default value is . 
> 
> forvalues lowest to highest of the variable, manually set for each var
> run the generate row program for the level of the variable 
> if there is a missing specified, then run the generate row for missing vals
> 
> */ 
. 
. *****************************************************************************
> ***
. * Generic code to summarise a continuous variable 
. 
. cap prog drop summarizevariable 

. prog define summarizevariable
  1. syntax, variable(varname) 
  2. 
.         local lab: variable label `variable'
  3.         file write tablecontent ("`lab'") _n 
  4.         
.         qui summarize `variable', d
  5.         file write tablecontent ("Median (IQR)") _tab 
  6.         file write tablecontent (r(p50)) (" (") (r(p25)) ("-") (r(p75)) ("
> )") _tab
  7.                                                         
.         qui summarize `variable' if exposure == 0, d
  8.         file write tablecontent (r(p50)) (" (") (r(p25)) ("-") (r(p75)) ("
> )") _tab
  9. 
.         qui summarize `variable' if exposure == 1, d
 10.         file write tablecontent (r(p50)) (" (") (r(p25)) ("-") (r(p75)) ("
> )") _n
 11.         
.         qui summarize `variable', d
 12.         file write tablecontent ("Min, Max") _tab 
 13.         file write tablecontent (r(min)) (", ") (r(max)) ("") _tab
 14.                                                         
.         qui summarize `variable' if exposure == 0, d
 15.         file write tablecontent (r(min)) (", ") (r(max)) ("") _tab
 16. 
.         qui summarize `variable' if exposure == 1, d
 17.         file write tablecontent (r(min)) (", ") (r(max)) ("") _n
 18.         
. end

. 
. 
. /* INVOKE PROGRAMS FOR TABLE 1===============================================
> =*/ 
. 
. *Set up output file
. cap file close tablecontent

. file open tablecontent using $tabfigdir/table1_`outcome'.txt, write text repl
> ace
(note: file /workspace/output/oac_match_tabfig/table1_covidtest.txt not found)

. 
. file write tablecontent ("Table 1: Demographic and Clinical Characteristics -
>  $population for `outcome'") _n

. 
. * Exposure labelled columns
. 
. local lab0: label exposure 0

. local lab1: label exposure 1

. 
. file write tablecontent _tab ("Total")                                       
>              _tab ///
>                                                          ("`lab0'")          
>                                          _tab ///
>                                                          ("`lab1'")          
>                                      _n

. 
. * DEMOGRAPHICS (more than one level, potentially missing) 
. 
. gen byte cons=1

. tabulatevariable, variable(cons) min(1) max(1) 

. file write tablecontent _n 

. 
. tabulatevariable, variable(agegroup) min(1) max(6) 

. file write tablecontent _n 

. 
. tabulatevariable, variable(male) min(0) max(1) 

. file write tablecontent _n 

. 
. tabulatevariable, variable(bmicat) min(1) max(6) missing

. file write tablecontent _n 

. 
. tabulatevariable, variable(smoke) min(1) max(3) missing 

. file write tablecontent _n 

. 
. tabulatevariable, variable(ethnicity) min(1) max(5) missing 

. file write tablecontent _n 

. 
. tabulatevariable, variable(imd) min(1) max(5) missing

. file write tablecontent _n 

. 
. tabulatevariable, variable(diabcat) min(1) max(4) missing

. file write tablecontent _n 

. 
. foreach varlist in  hypertension                ///
>                                         heart_failure           ///
>                                         diabetes                        ///
>                                         copd                            ///
>                                         other_respiratory       ///
>                                         cancer                          ///
>                                         immunodef_any           ///
>                                         ckd                                  
>    ///
>                                         flu_vaccine                     ///
>                                         oestrogen                       ///
>                                         antiplatelet            ///
>                                         myocardial_infarct  ///
>                                         pad                                  
>    ///
>                                         stroke_tia                      ///
>                                         vte                                  
>    ///
>                                         {
  2. tabulatevariable, variable(`varlist') min(1) max(1)
  3. }

. file write tablecontent _n _n

. 
. * COMORBIDITIES (continuous)
. 
. summarizevariable, variable(gp_consult_count)

. summarizevariable, variable(age)

. summarizevariable, variable(ae_attendance_count)

. 
. file close tablecontent

. 
. * Close log file 
. log close
      name:  <unnamed>
       log:  /workspace/output/oac_match_log/04_an_descriptive_table_covidtest.
> log
  log type:  text
 closed on:  31 Dec 2020, 11:32:01
-------------------------------------------------------------------------------
