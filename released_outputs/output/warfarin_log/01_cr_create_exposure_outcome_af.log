-------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /workspace/output/warfarin_log/01_cr_create_exposure_outcome_af.lo
> g
  log type:  text
 opened on:  31 Dec 2020, 02:42:33

. 
. /*===========================================================================
> ===*/
. * import the dataset from 00 program
. use $tempdir/format_dataset, clear

. 
. sort patient_id

. 
. * Date of cohort entry, 1 Mar 2020
. gen enter_date = date("$indexdate", "DMY")

. format enter_date %td

. 
. * Format treatment variables
. foreach var of varlist  warfarin_last_four_months   ///
>                                                 doac_last_four_months      //
> /
>                                                 {
  2.                                                 
.         confirm string variable `var'
  3.         rename `var' `var'_dstr
  4.         gen `var' = date(`var'_dstr, "YMD")
  5.         drop `var'_dstr
  6.         format `var' %td 
  7.         
. }
(410,105 missing values generated)
(229,445 missing values generated)

. /* TREATMENT EXPOSURE========================================================
> =*/        
. 
. *Derive oral anticoagulant (Warfarin/DOACs) exposure within 4 months before c
> ohort entry
. *Objective 1: comparison group - untreated people with atrial fibrillation
. gen exposure = 1 if warfarin_last_four_months != .
(410,105 missing values generated)

. replace exposure = 1 if doac_last_four_months != .
(285,552 real changes made)

. replace exposure = 0 if exposure == .
(124,553 real changes made)

. 
. label var exposure "Oral anticoagulant Treatment Exposure"

. label define exposure 0 "non-use" 1 "current use"

. label values exposure exposure 

. 
. *Objective 2: comparing warfarin vs DOACs
. *Derive warfarin & DOACs exposure within 4 months before cohort entry
. gen exposure_warfarin = 1 if warfarin_last_four_months!=. & ///
> warfarin_last_four_months == max(warfarin_last_four_months, doac_last_four_mo
> nths)
(413,811 missing values generated)

. 
. replace exposure_warfarin = 0 if doac_last_four_months!=. & ///
> doac_last_four_months == max(warfarin_last_four_months, doac_last_four_months
> )
(289,291 real changes made)

. 
. *If the latest date of warfarin and DOAC are the same, classify it as warfari
> n exposure
. replace exposure_warfarin = 1 if exposure == 1 & ///
> warfarin_last_four_months == max(warfarin_last_four_months, doac_last_four_mo
> nths) & ///
> warfarin_last_four_months == doac_last_four_months
(33 real changes made)

. 
. label var exposure_warfarin "warfarin vs DOACs"

. label define exposure_warfarin 0 "DOAC use" 1 "warfarin use" 2 "warfarin & DO
> AC same latest prescription"

. label values exposure_warfarin exposure_warfarin 

. 
. * Sensitivity analysis: exclude people who were prescribed both warfarin and 
> DOACs on the same day as the latest OAC prescription
. clonevar sens_exposure_warfarin = exposure_warfarin
(124,553 missing values generated)

. replace sens_exposure_warfarin = 2 if exposure == 1 & ///
> warfarin_last_four_months == max(warfarin_last_four_months, doac_last_four_mo
> nths) & ///
> warfarin_last_four_months == doac_last_four_months
(33 real changes made)

. 
. label var sens_exposure_warfarin "sensitivity analysis: flag warfarin & DOAC 
> same latest prescription"

. label values sens_exposure_warfarin exposure_warfarin 

. 
. 
. /* OUTCOME AND SURVIVAL TIME=================================================
> =*/
. * Date of data available
. gen onscoviddeathcensor_date    = date("$onscoviddeathcensor",  "DMY")

. 
. * Format the dates
. format  enter_date                                      ///
>                 onscoviddeathcensor_date        %td

. 
. /*   Outcomes/censoring variable   */
. 
. * Dates of: ONS any death, hospital admission (Primary diagnosis) due to covi
> d
. * Recode to dates from the strings 
. foreach var of varlist  died_date_ons               ///
>                                                 first_tested_for_covid      /
> //
>                                                 first_positive_test_date    /
> //
>                                                 covid_admission_date        /
> //
>                                                 dereg_date                   
>                    ///
>                                                 {
  2.                                                 
.         confirm string variable `var'
  3.         rename `var' `var'_dstr
  4.         gen `var' = date(`var'_dstr, "YMD")
  5.         drop `var'_dstr
  6.         format `var' %td 
  7.         
. }
(486,524 missing values generated)
(448,679 missing values generated)
(502,762 missing values generated)
(513,075 missing values generated)
(481,954 missing values generated)

. 
. * Add half-day buffer if outcome on indexdate
. replace died_date_ons=died_date_ons+0.5 if died_date_ons==enter_date
(132 real changes made)

. 
. * Generate date of Covid death in ONS
. gen died_date_onscovid = died_date_ons if died_ons_covid_flag_any == 1
(514,519 missing values generated)

. 
. * Generate date of non-Covid death in ONS
. gen died_date_onsnoncoviddeath = died_date_ons if died_ons_covid_flag_any != 
> 1
(491,209 missing values generated)

. 
. * Generate date of hospital admission due to Covid
. gen covid_admission_primary_date = covid_admission_date ///
> if (covid_admission_primary_dx == "U071"| covid_admission_primary_dx == "U072
> ")
(515,534 missing values generated)

. 
. * Add half-day buffer if outcome on indexdate
. replace covid_admission_primary_date=covid_admission_primary_date+0.5 if covi
> d_admission_primary_date==enter_date
([REDACTED] real changes made)

. replace first_tested_for_covid=first_tested_for_covid+0.5 if first_tested_for
> _covid==enter_date
([REDACTED] real changes made)

. replace first_positive_test_date=first_positive_test_date+0.5 if first_positi
> ve_test_date==enter_date
([REDACTED] real change made)

. 
. * Format outcome dates
. format died_date_ons died_date_onscovid died_date_onsnoncoviddeath covid_admi
> ssion_primary_date dereg_date %td

. 
. /*  Identify date of end of follow-up
> (first: end data availability, death, deregistration from GP or outcome) */
. * For looping later, name must be stime_binary_outcome_name
. 
. * Primary outcome: ONS covid-19 death (use onscoviddeathcensor_date because i
> t is the earliest date in all linkage dataset - treat it as end of study)
. gen stime_onscoviddeath = min(onscoviddeathcensor_date, died_date_ons, dereg_
> date)

. gen stime_admitcovid = min(onscoviddeathcensor_date, died_date_ons, dereg_dat
> e, covid_admission_primary_date)

. 
. * Exploratory outcomes: ONS non-covid death; covid test; positive covid test
. gen stime_onsnoncoviddeath = min(onscoviddeathcensor_date, died_date_ons, der
> eg_date)

. gen stime_covidtest = min(onscoviddeathcensor_date, died_date_ons, dereg_date
> , first_tested_for_covid)

. gen stime_positivecovidtest = min(onscoviddeathcensor_date, died_date_ons, de
> reg_date, first_positive_test_date)

. 
. * Generate variables for follow-up person-days for each outcome
. gen follow_up_onscoviddeath = stime_onscoviddeath - enter_date + 1

. gen follow_up_admitcovid = stime_admitcovid - enter_date + 1

. gen follow_up_onsnoncoviddeath = stime_onsnoncoviddeath - enter_date + 1

. gen follow_up_covidtest = stime_covidtest - enter_date + 1

. gen follow_up_positivecovidtest = stime_positivecovidtest - enter_date + 1

.  
. * Format date variables
. format stime* %td 

. 
. * Binary indicators for outcomes
. * Primary outcome: ONS covid-19 death
. gen onscoviddeath = 1 if died_date_onscovid!=. & ///
> died_date_onscovid>=enter_date & died_date_onscovid<=stime_onscoviddeath
(515,837 missing values generated)

. 
. replace onscoviddeath = 0 if onscoviddeath == .
(515,837 real changes made)

. 
. * Hospital admission due to COVID-19
. gen admitcovid = 1 if covid_admission_primary_date!=. & ///
> covid_admission_primary_date>=enter_date & covid_admission_primary_date<=stim
> e_admitcovid
(515,854 missing values generated)

. 
. replace admitcovid = 0 if admitcovid == .
(515,854 real changes made)

.  
. * Exploratory outcomes: Non-Covid death; Covid-19 test; positive Covid-19 tes
> t
. * Non-Covid death
. gen onsnoncoviddeath = 1 if died_date_onsnoncoviddeath!=. & ///
> died_date_onsnoncoviddeath>=enter_date & died_date_onsnoncoviddeath<=stime_on
> snoncoviddeath
(497,729 missing values generated)

. 
. replace onsnoncoviddeath = 0 if onsnoncoviddeath == .
(497,729 real changes made)

. 
. * COVID test
. gen covidtest = 1 if first_tested_for_covid!=. & ///
> first_tested_for_covid>=enter_date & first_tested_for_covid<=stime_covidtest
(472,648 missing values generated)

. 
. replace covidtest = 0 if covidtest == .
(472,648 real changes made)

. 
. * Positive COVID test
. gen positivecovidtest = 1 if first_positive_test_date!=. & ///
> first_positive_test_date>=enter_date & first_positive_test_date<=stime_positi
> vecovidtest
(512,159 missing values generated)

. 
. replace positivecovidtest = 0 if positivecovidtest == .
(512,159 real changes made)

. 
. /* LABEL VARIABLES===========================================================
> =*/
. 
. * Outcomes and follow-up
. label var enter_date                                    "Date of study entry"

. label var onscoviddeathcensor_date              "Date of admin censoring for 
> ONS deaths"

. 
. label var onscoviddeath                                 "Failure/censoring in
> dicator for outcome: ONS covid death"

. label var died_date_onscovid                    "Date of ONS Death (Covid-19 
> only)"

. label var admitcovid                                "Failure/censoring indica
> tor for outcome: SUS covid"

. label var covid_admission_primary_date  "Date of hospital admission due to co
> vid as primary dx"

. label var onsnoncoviddeath              "Failure/censoring indicator for outc
> ome: ONS non-covid death"

. label var died_date_onsnoncoviddeath    "Date of ONS non-covid death"

. label var covidtest                             "Failure/censoring indicator 
> for outcome: first covid test"

. label var first_tested_for_covid                "Date of first covid test"

. label var positivecovidtest             "Failure/censoring indicator for outc
> ome: first positive covid test"

. label var first_positive_test_date              "Date of positive covid test"

. 
. label var died_date_ons                 "ONS death date (any cause)"

. 
. * End of follow-up (date)
. label var stime_onscoviddeath                   "End of follow-up: ONS covid 
> death"

. label var stime_admitcovid                      "End of follow-up: SUS covid"

. label var stime_onsnoncoviddeath                "End of follow-up: ONS non-co
> vid death"

. label var stime_covidtest                       "End of follow-up: covid test
> "

. label var stime_positivecovidtest               "End of follow-up: positive c
> ovid test"

. 
. * Duration of follow-up
. label var follow_up_onscoviddeath       "Number of days (follow-up) for ONS c
> ovid death"

. label var follow_up_admitcovid                  "Number of days (follow-up) f
> or covid hospital admission"

. label var follow_up_onsnoncoviddeath    "Number of days (follow-up) for ONS n
> on-covid death"

. label var follow_up_covidtest                   "Number of days (follow-up) f
> or covid test"

. label var follow_up_positivecovidtest   "Number of days (follow-up) for posit
> ive covid test"

. /* ==========================================================================
> */
. 
. save $tempdir/cr_dataset_af, replace
(note: file /workspace/output/warfarin_tempdata/cr_dataset_af.dta not found)
file /workspace/output/warfarin_tempdata/cr_dataset_af.dta saved

. 
. log close
      name:  <unnamed>
       log:  /workspace/output/warfarin_log/01_cr_create_exposure_outcome_af.lo
> g
  log type:  text
 closed on:  31 Dec 2020, 02:42:37
-------------------------------------------------------------------------------
